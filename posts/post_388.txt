Re: [PATCH] Automatic block validation
  
  Bitcointalk
  
	2010-08-16 15:25:54 UTC - Original Post
  That's a difficult approach.We need to cause a reorg, which will disconnect the invalid chain.This is code that will rarely ever get tested, and is fairly intricate, so something simple and safe is best.Here's what I was thinking of.  (I haven't tested this yet)  It checks all the blocks in the main chain.  If it finds a bad one, it sets all that chain's bnChainWork to 0 so it can't win best chain again, and it reduces best chain work to the fork level so any new block after the fork will cause a reorg.  (It can't change pindexBest without actually doing a reorg)This isn't perfect yet.  It still needs to receive one valid block to trigger the reorg.  It would probably be possible to initiate an AddToBlockIndex or Reorganize after the check, but it would require a lot more careful attention.  I probably should break out part of AddToBlockIndex that sets the new best block.  I'll probably end up doing that instead of the code below.Code:bool CTxDB::LoadBlockIndex(){    ...    // Verify blocks in the main chain    vector<CBlockIndex*> vChain;    for (CBlockIndex* pindex = pindexBest; pindex && pindex->pprev; pindex = pindex->pprev)    {        vChain.push_back(pindex);        CBlock block;        if (!block.ReadFromDisk(pindex))            return error("LoadBlockIndex() : block.ReadFromDisk failed");        if (!block.CheckBlock())        {            bnBestChainWork = pindex->pprev->bnChainWork;            foreach(CBlockIndex* pindex2, vChain)                pindex2->bnChainWork = 0;        }    }    return true;}